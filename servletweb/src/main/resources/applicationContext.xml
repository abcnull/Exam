<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置扫描器，扫描除了控制器意外的所有包-->
    <!--配置c3p0连接池的的bean-->
    <!--配置SqlSession工厂的bean，这里是Spring与Mybatis整合了-->
    <!--配置MapperScannerConfigurer这个bean，功能是将Mybatis接口的实现加入到ioc容器中-->
    <!--配置DataSourceTransactionManager这个bean，主要是起到事务控制的作用-->
    <!--利用配置的方式开启基于注解的事务-->
    <!--配置事务增强，即事务如何切入的-->

    <!--扫描器，扫描这下面的所有包,除了控制器以外-->
    <context:component-scan base-package="com.example.crud">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <!--Spring配置文件，主要配置和业务逻辑有关的，比如数据源，事务控制之类的，配置ComboPooledDataSource这个连接池的一个bean-->
    <context:property-placeholder location="classpath:dbconfig.properties"></context:property-placeholder>  <!--封装链接数据库信息-->
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置和Mybatis的整合,配置这个SqlSessionFactory的bean-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定Mybatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--指定数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
        <!--指定Mybatis的mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--配置扫描器，将Mybatis接口的实现加入到ioc容器中，将dao接口中的方法和mapper中的sql建立联系-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描dao包所有接口的实现，并且加入到ioc容器中-->
        <property name="basePackage" value="com.example.crud.dao"></property>
    </bean>

    <!--事务控制配置-->
    <bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

    <!--利用配置的方式开启基于注解的事务-->
    <aop:config>
        <!--切入点表达式，所有service包下方法都能切入事务-->
        <aop:pointcut expression="execution(* com.example.crud.service..*(..))" id="txPoint"/>
        <!--配置事务-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!--配置事务增强，事务如何切入-->
    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--切入点切入的所有方法都是事务方法-->
            <tx:method name="*"/>
            <!--切入点切入以get开始的所有方法-->
            <tx:method name="get*" read-only="true"/>    <!--一般都是查询-->
        </tx:attributes>
    </tx:advice>
</beans>